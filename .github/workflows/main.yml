name: 🚀 Deploy to GitHub Pages

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 🛠️ Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GHPAT || github.token }}

      - name: ⚙️ Setup .NET 9 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.x

      - name: 🧰 Install .NET WASM Build Tools
        run: dotnet workload install wasm-tools

      - name: 💾 Setup Node.js (for TailwindCSS)
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 📥 Install TailwindCSS and plugins
        working-directory: StaticBlaze
        run: npm ci

      - name: 📦 Restore .NET Dependencies
        run: dotnet restore ./StaticBlaze/StaticBlaze.csproj

      - name: 🏗️ Build Blazor Project
        run: dotnet publish ./StaticBlaze/StaticBlaze.csproj -c Release -p:GHPages=true -o published --no-restore
         ls -la published/wwwroot  # Debug output

      - name: 📄 Add .nojekyll File
        run: |
          mkdir -p published/wwwroot
          touch published/wwwroot/.nojekyll

      - name: 🔍 Verify Build Output
        run: |
          echo "Build output contents:"
          ls -la published
          ls -la published/wwwroot
          [ -d "published/wwwroot" ] || exit 1

      - name: 🔍 Check if GithubPage branch exists
        id: check-branch
        run: |
          if git ls-remote --heads origin refs/heads/GithubPage | grep -q 'GithubPage'; then
            echo "branch_exists=true" >> $GITHUB_OUTPUT
          else
            echo "branch_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: 🌿 Create GithubPage branch if needed
        if: steps.check-branch.outputs.branch_exists == 'false'
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git checkout --orphan GithubPage
          # Remove all files except published/wwwroot
          find . -path ./published -prune -o -path ./.git -prune -o -exec rm -rf {} + 2> /dev/null || true
          # Move published/wwwroot contents to root
          mv published/wwwroot/* .
          rm -rf published
          git add .
          git commit -m "Initial GithubPage branch"
          git push https://x-access-token:${{ secrets.GHPAT || github.token }}@github.com/${{ github.repository }}.git GithubPage

      - name: 🚀 Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          token: ${{ secrets.GHPAT || github.token }}
          folder: published/wwwroot
          branch: GithubPage
